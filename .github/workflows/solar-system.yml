name: Sistema Solar CI/CD

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - "feature/*"

jobs:
  # -------------------
  # SAST - Código fuente
  # -------------------
  semgrep_scan:
    name: Semgrep Scan (SAST)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run Semgrep
        run: |
          pip install semgrep
          semgrep --config=auto --json > semgrep-report.json
    continue-on-error: true # ⚠️ evita que falle el pipeline completo si hay findings
    # continue-on-error: true = El job se marca como exitoso aunque existan vulnerabilidades.

  sonarqube_scan:
    name: SonarQube Scan (SAST + Calidad)
    runs-on: ubuntu-latest
    needs: semgrep_scan
    steps:
      - uses: actions/checkout@v4
      - name: Run SonarQube
        run: |
          sonar-scanner \
            -Dsonar.projectKey=solar-system \
            -Dsonar.sources=. \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
    continue-on-error: true

  # -------------------
  # SCA - Dependencias
  # -------------------
  npm_audit:
    name: NPM Audit (SCA)
    runs-on: ubuntu-latest
    needs: semgrep_scan # lo pongo después del SAST para que quede claro en el gráfico
    steps:
      - uses: actions/checkout@v4
      - name: Run npm audit
        run: |
          mkdir -p resultados
          npm install
          npm audit --json > resultados/npm-audit.json
    continue-on-error: true

  trivy_fs_scan:
    name: Trivy FS Scan (SCA)
    runs-on: ubuntu-latest
    needs: npm_audit
    steps:
      - uses: actions/checkout@v4
      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo "deb https://aquasecurity.github.io/trivy-repo/deb generic main" | sudo tee -a /etc/apt/sources.list
          sudo apt-get update
          sudo apt-get install -y trivy
      - name: Run Trivy FS Scan
        run: |
          trivy fs . --format json --output trivy-fs-report.json --severity HIGH,CRITICAL
    continue-on-error: true

  # -------------------
  # DAST - Seguridad dinámica
  # -------------------
  zap_scan:
    name: OWASP ZAP Scan (DAST)
    runs-on: ubuntu-latest
    needs: trivy_fs_scan
    services:
      docker:
        image: docker:20.10-dind
        options: --privileged
    steps:
      - uses: actions/checkout@v4
      - name: Run OWASP ZAP
        run: echo "Aquí va el comando para ZAP DAST"
    continue-on-error: true

  # -------------------
  # Container Security
  # -------------------
  docker_build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: zap_scan
    steps:
      - uses: actions/checkout@v4
      - name: Build Image
        run: docker build -t solar-system:latest .

  trivy_image_scan:
    name: Trivy Scan - Container Image
    runs-on: ubuntu-22.04
    needs: docker_build
    steps:
      - uses: actions/checkout@v4
      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo "deb https://aquasecurity.github.io/trivy-repo/deb generic main" | sudo tee -a /etc/apt/sources.list
          sudo apt-get update
          sudo apt-get install -y trivy
      - name: Scan Image
        run: |
          trivy image solar-system:latest \
            --format json \
            --output trivy-image-report.json \
            --severity HIGH,CRITICAL
    continue-on-error: true